//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalesOrderApi.Repositories.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SalesOrderApi.Repositories.Resources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	empid, 
        ///	firstname + &apos; &apos; + lastname AS FullName
        ///FROM HR.Employees.
        /// </summary>
        public static string Employees_Get {
            get {
                return ResourceManager.GetString("Employees_Get", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @OrderId INT;
        ///
        ///BEGIN TRANSACTION;
        ///
        ///BEGIN TRY
        ///    -- Insertar en Orders y obtener el ID de la orden recién creada
        ///    INSERT INTO [Sales].[Orders] (Empid, Shipperid, Shipname, Shipaddress, Shipcity, Orderdate, Requireddate, Shippeddate, Freight, Shipcountry)
        ///    VALUES (@EmpId, @ShipperId, @ShipName, @ShipAddress, @ShipCity, @OrderDate, @RequiredDate, @ShippedDate, @Freight, @ShipCountry);
        ///
        ///    SET @OrderId = SCOPE_IDENTITY();
        ///
        ///    -- Insertar los detalles de la orden
        ///    INSERT INTO [Sal [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Orders_Create {
            get {
                return ResourceManager.GetString("Orders_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @OrderId INT;
        ///
        ///BEGIN TRANSACTION;
        ///
        ///BEGIN TRY
        ///    -- Insertar en Orders y obtener el ID de la orden recién creada
        ///    INSERT INTO [Sales].[Orders] (Empid, Shipperid, Shipname, Shipaddress, Shipcity, Orderdate, Requireddate, Shippeddate, Freight, Shipcountry)
        ///    VALUES (@EmpId, @ShipperId, @ShipName, @ShipAddress, @ShipCity, @OrderDate, @RequiredDate, @ShippedDate, @Freight, @ShipCountry);
        ///
        ///    SET @OrderId = SCOPE_IDENTITY();
        ///
        ///    -- Insertar los detalles de la orden
        ///    INSERT INTO [Sal [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Orders_CreateDetails {
            get {
                return ResourceManager.GetString("Orders_CreateDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    OrderId,
        ///    RequiredDate,
        ///    ShippedDate,
        ///    ShipName,
        ///    ShipAddress,
        ///    ShipCity
        ///FROM [Sales].[Orders]
        ///WHERE custid = @ClientId;.
        /// </summary>
        public static string Orders_Get {
            get {
                return ResourceManager.GetString("Orders_Get", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	productid,
        ///	productname
        ///FROM [Production].[Products].
        /// </summary>
        public static string Products_Get {
            get {
                return ResourceManager.GetString("Products_Get", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH OrderDeltas AS (
        ///SELECT 
        ///    custid,
        ///    OrderDate,
        ///    DATEDIFF(DAY, OrderDate, (LEAD(OrderDate) OVER (PARTITION BY custid ORDER BY OrderDate))) AS DaysBetweenOrders
        ///FROM Sales.Orders
        ///),
        ///AverageDays AS (
        ///SELECT 
        ///    custid,
        ///    (SUM(DaysBetweenOrders) / (SELECT COUNT(custid))) AS AvgDaysBetweenOrders
        ///FROM OrderDeltas
        ///GROUP BY custid
        ///)
        ///SELECT 
        ///    (SELECT c.companyname FROM Sales.Customers c WHERE c.custid = o.custid) AS CustomerName,
        ///    MAX(o.OrderDate) AS LastOrderDate,
        ///    DATEADD( [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SalesPrediction_Get {
            get {
                return ResourceManager.GetString("SalesPrediction_Get", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string Shippers_Get {
            get {
                return ResourceManager.GetString("Shippers_Get", resourceCulture);
            }
        }
    }
}
